package com.example.demo.services;

import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.example.demo.models.Billetera;
import com.example.demo.models.Divisa;
import com.example.demo.models.SaldoDivisa;
import com.example.demo.repositries.DivisaRepository;
import com.example.demo.repositries.SaldoDivisaRepository;

@Service
public class DivisaServiceImpl implements DivisaService {

	@Autowired
	DivisaRepository repository;

	@Autowired
	BilleteraService billeteraService;

	@Autowired
	SaldoDivisaRepository saldoDivisaRepository;

	@Override
	public boolean deleteDivisa(String divisaTipo) {
		divisaTipo.toUpperCase();
		Optional<Divisa> div = repository.findById(divisaTipo);
		if (!div.isEmpty()) {            
            // Borro la divisa de todas las billeteras existentes
            List<SaldoDivisa> saldoDivisas = saldoDivisaRepository.findAllByDivisaTipo(divisaTipo);
            if (!saldoDivisas.isEmpty()) {
                Billetera billetera;
                float aux= div.get().getDivisaValor();// iDivisaRepository.findById(tipo).get().getDivisaValor();
                for (int i = 0; i < saldoDivisas.size(); i++) {
                    billetera= saldoDivisas.get(i).getBilletera();
                    billetera.setSaldoTotal((-1)*saldoDivisas.get(i).getDivisaSaldo()*aux);
                    saldoDivisaRepository.delete(saldoDivisas.get(i));
                }
            }
            repository.deleteById(divisaTipo);
            return true;
        } else
            return false;
	}

	@Override
	public List<Divisa> getDivisas() {
		return repository.findAll();
	}

	@Override
	public Divisa getDivisaById(String divisaTipo) {
		divisaTipo.toUpperCase();
		Optional<Divisa> divisa = repository.findById(divisaTipo);
		if (!divisa.isEmpty())
			return divisa.get();
		else
			return null;
	}

	@Override
	public Divisa registrarDivisa(Divisa divisa) {
		divisa.toUpperCase();
		if (repository.findById(divisa.getDivisaTipo()).isEmpty()) {
			Divisa nueva = repository.save(divisa);
			List<Billetera> billeteras = billeteraService.getBilleteras();
			if (!billeteras.isEmpty()) {
				for (int i = 0; i < billeteras.size(); i++) {
					SaldoDivisa ad = new SaldoDivisa(divisa.getDivisaTipo(), billeteras.get(i));
					saldoDivisaRepository.save(ad);
				}
			}
			return nueva;
		} else
			return null;
	}

	@Override
	public Divisa update(Divisa divisa) {
		divisa.toUpperCase();
		Optional<Divisa> temp = repository.findById(divisa.getDivisaTipo());
		if (!temp.isEmpty()) {
			float valorViejo = temp.get().getDivisaValor();
			float aux;
			Billetera billetera;
			List<SaldoDivisa> saldoDivisas = saldoDivisaRepository.findAllByDivisaTipo(divisa.getDivisaTipo());
			for (int i = 0; i < saldoDivisas.size(); i++) {				
				aux = (saldoDivisas.get(i).getDivisaSaldo() * divisa.getDivisaValor())
						- (saldoDivisas.get(i).getDivisaSaldo() * valorViejo);
				billetera = saldoDivisas.get(i).getBilletera();
				billetera.setSaldoTotal(aux);
				billeteraService.update(billetera);
			}
			return repository.save(divisa);
		} else
			return null;
	}

}
